import "./List.css";
import TodoItem from "./TodoItem";
import { useState, useMemo, useContext } from "react";
import { TodoStateContext } from "../App";

const List = () => {
  const todos = useContext(TodoStateContext);
  /**
  2. useMemoÎ•º ÏÇ¨Ïö©Ìïú Ïù¥Ïú† -> List Ïª¥Ìè¨ÎÑåÌä∏ÏóêÏÑúÎäî Ïôú Íµ¨Ï°∞Î∂ÑÌï¥ Ìï†ÎãπÏùÑ ÌïòÏßÄ ÏïäÎÉê
  Ïù¥Ï†ÑÏóê Íµ¨Ï°∞Î∂ÑÌï¥Ìï†ÎãπÏúºÎ°ú Ïì∞Í≥† ÏûàÎäîÍ≤ÉÏùÑ Î≥¥Î©¥ TodoItem Ïª¥Ìè¨ÎÑåÌä∏ DispatchContextÎ°ú Î∂ÄÌÑ∞ Í∞íÏùÑ Î∂àÎü¨Ïò¨ÎïåÎäî Íµ¨Ï°∞Î∂ÑÌï¥Ìï†ÎãπÏùÑ ÏÇ¨Ïö©ÌïúÎã§. 
  ÌïòÏßÄÎßå List Ïª¥Ìè¨ÎÑåÌä∏ÏóêÏÑú Ïïà Ïì∞Îäî Ïù¥Ïú†Îäî App Ïª¥Ìè¨ÎÑåÌä∏ÏóêÏÑú DispatchContextÎäî Í∞ùÏ≤¥Î•º ÌÜµÌï¥ÏÑú Ïó¨Îü¨Í∞úÏùò Í∞íÏùÑ Í≥µÍ∏âÌïòÍ≥† ÏûàÎã§. 
  onCreate, onUpdate, onDelete Îì§ Ï≤òÎüº Í∞úÎ≥ÑÎ°ú Í∫ºÎÇ¥ Ïì∏ Ïàò ÏûàÍ≤å Í≥µÍ∏âÏù¥ ÎêòÏóàÍ∏∞ ÎïåÎ¨∏Ïóê Íµ¨Ï°∞Î∂ÑÌï¥Ìï†ÎãπÏúºÎ°ú Ï†ëÍ∑ºÏùÑ ÌïòÎäîÍ≤ÉÏù¥Í≥†,
  Î∞òÎåÄÎ°ú TodoStateContext.Provider Í≤ΩÏö∞ÏóêÎäî valuePropsÎ°ú todosÍ∞Ä Î∞îÎ°ú Í≥µÍ∏âÎêòÏóàÎã§. -> Î≥ÄÏàòÏóêÎã§Í∞Ä Í∞ùÏ≤¥Î•º Îã¥ÏùÄÍ≤å ÏïÑÎãå Î∞∞Ïó¥ÏùÑ Îã¥ÏïòÎã§Í≥† ÏÉùÍ∞ÅÌïòÎ©¥ ÎêúÎã§. 
  Í∑∏ÎûòÏÑú List Ïª¥Ìè¨ÎÑåÌä∏ÏóêÏÑúÎäî Íµ¨Ï°∞Î∂ÑÌï¥Ìï†ÎãπÏù¥ ÏïÑÎãå valuePropsÎ°ú Ï†ÑÎã¨Îêú Í∞íÏùÑ Í∑∏ÎåÄÎ°ú todosÎùºÎäî Î≥ÄÏàòÎ°ú Í∫ºÎÇ¥ÏÑú ÏÇ¨Ïö©Ìï† Ïàò ÏûàÎäîÍ±∞Îã§. 
   */
  const [search, setSearch] = useState("");

  const onChangeSearch = (e) => {
    setSearch(e.target.value);
  };

  const getFilteredData = () => {
    if (search === "") {
      return todos;
    }
    return todos.filter((todo) =>
      todo.content.toLowerCase().includes(search.toLowerCase())
    );
  };

  const filteredTodos = getFilteredData();

  const { totalCount, doneCount, notDoneCount } = useMemo(() => {
    console.log("getAnalyzedData Ìò∏Ï∂ú");
    const totalCount = todos.length;
    const doneCount = todos.filter((todo) => todo.isDone).length;
    const notDoneCount = totalCount - doneCount;

    return {
      totalCount,
      doneCount,
      notDoneCount,
    };
  }, [todos]);
  // ÏùòÏ°¥ÏÑ±Î∞∞Ïó¥ : deps

  return (
    <div className="List">
      <h4>Todo List üå±</h4>
      <div>
        <div>total: {totalCount}</div>
        <div>done: {doneCount}</div>
        <div>notDone: {notDoneCount}</div>
      </div>
      <input
        value={search}
        onChange={onChangeSearch}
        placeholder="Í≤ÄÏÉâÏñ¥Î•º ÏûÖÎ†•ÌïòÏÑ∏Ïöî."
      />
      <div className="todos_wrapper">
        {filteredTodos.map((todo) => {
          return <TodoItem key={todo.id} {...todo} />;
        })}
      </div>
    </div>
  );
};

export default List;
